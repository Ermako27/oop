//
// Created by Ermakov Maxim on 15.04.18.
//

#include <iostream>
#include "Set.hpp"

int main()
{
	// тестирование конструкторов

	// 1 - конструктор по умолчанию

	std::cout << "//////////////////// ТИП INT //////////////////////" << "\n";
	std::cout << "Конструктор по умолчанию: " << "\n";
	Set<int> set1;
	std::cout << set1;
	std::cout << "-----------------------------------------" << "\n";
	
	// 2 - конструкторы init_list
	std::cout << "Конструкторы init_list: " << "\n";
	Set<int> set2 = {4,1,1,1,5,8,2,3};
	Set<int> set2_1{0,9,5,1,7,4,5};
	std::cout << set2;
	std::cout << set2_1;
	std::cout << "-----------------------------------------" << "\n";

	// std::cout << "Пересечение : " << "\n";
	// Set<int>
	// Set<int> set2 = {4,1,1,1,5,8,2,3};
	// Set<int> set2_1{0,9,5,1,7,4,5};
	// std::cout << set2;
	// std::cout << set2_1;
	// std::cout << "-----------------------------------------" << "\n";

	// 3 - конструктор копирования
	std::cout << "Конструктор копирования: " << "\n";
	Set<int> set3(set2);
	std::cout << set3;
	std::cout << "-----------------------------------------" << "\n";

	
	// проверка методов

	std::cout << "Проверка на пустоту:";
	std::cout << "set1: " << set1;
	std::cout << set1.is_empty() << "\n";
	std::cout << "-----------------------------------------" << "\n";

	std::cout << "Проверка на вхождение элемента 5:" << "\n";
	std::cout << "set2: " << set2;
	std::cout << set2.found(5) << "\n";
	std::cout << "-----------------------------------------" << "\n";



	std::cout << "Проверка добавление нескольких элементов: " << "\n";
	std::cout << "set1: " << set1;
	set1.insert({1,2,3});
	std::cout << set1;
	std::cout << "-----------------------------------------" << "\n";


	std::cout << "Проверка добавление одного элемента 99: " << "\n";
	std::cout << "set3: " << set3;
	set3.insert(99);
	std::cout << set3;
	std::cout << "-----------------------------------------" << "\n";

	std::cout << "Проверка повторного добавления одного элемента 99: " << "\n";
	std::cout << "set3: " << set3;
	set3.insert(99);
	std::cout << set3;
	std::cout << "-----------------------------------------" << "\n";


	std::cout << "Проверка удаления элемента 99: " << "\n";
	std::cout << "set3: " << set3;
	set3.erase(99);
	std::cout << set3;
	std::cout << "-----------------------------------------" << "\n";


	std::cout << "Проверка удаления несуществующего элемента 99: " << "\n";
	std::cout << "set3: " << set3;
	set3.erase(99);
	std::cout << set3;
	std::cout << "-----------------------------------------" << "\n";



	std::cout << "\n\n//////////////////// ТИП DOUBLE //////////////////////" << "\n";
	std::cout << "Конструктор по умолчанию: " << "\n";
	Set<double> dset1;
	std::cout << dset1;
	std::cout << "-----------------------------------------" << "\n";
	
	// 2 - конструкторы init_list
	std::cout << "Конструкторы init_list: " << "\n";
	Set<double> dset2 = {4.6,1.8,1.2,1.5,5.9,8.3,2.9,3.1};
	Set<double> dset2_1{0.7,9.2,5.8,1.4,7.8};
	std::cout << dset2;
	std::cout << dset2_1;
	std::cout << "-----------------------------------------" << "\n";

	// 3 - конструктор копирования
	std::cout << "Конструктор копирования: " << "\n";
	Set<double> dset3(dset2);
	std::cout << dset3;
	std::cout << "-----------------------------------------" << "\n";

	
	// проверка методов

	std::cout << "Проверка на пустоту:";
	std::cout << "dset1: " << dset1;
	std::cout << dset1.is_empty() << "\n";
	std::cout << "-----------------------------------------" << "\n";

	std::cout << "Проверка на вхождение элемента 5.9:" << "\n";
	std::cout << "dset2: " << dset2;
	std::cout << dset2.found(5.9) << "\n";
	std::cout << "-----------------------------------------" << "\n";



	std::cout << "Проверка добавление нескольких элементов: " << "\n";
	std::cout << "dset1: " << dset1;
	dset1.insert({2.1,3.9,3.7});
	std::cout << dset1;
	std::cout << "-----------------------------------------" << "\n";


	std::cout << "Проверка добавление одного элемента 99.89: " << "\n";
	std::cout << "dset3: " << dset3;
	dset3.insert(99.89);
	std::cout << dset3;
	std::cout << "-----------------------------------------" << "\n";

	std::cout << "Проверка повторного добавления одного элемента 99.89: " << "\n";
	std::cout << "dset3: " << dset3;
	dset3.insert(99.89);
	std::cout << dset3;
	std::cout << "-----------------------------------------" << "\n";


	std::cout << "Проверка удаления элемента 99.89: " << "\n";
	std::cout << "dset3: " << dset3;
	dset3.erase(99.89);
	std::cout << dset3;
	std::cout << "-----------------------------------------" << "\n";


	std::cout << "Проверка удаления несуществующего элемента 99.89: " << "\n";
	std::cout << "dset3: " << dset3;
	dset3.erase(99.89);
	std::cout << dset3;
	std::cout << "-----------------------------------------" << "\n";

	std::cout << "\n\n//////////////////// ТИП CHAR //////////////////////" << "\n";
	std::cout << "Конструктор по умолчанию: " << "\n";
	Set<char> cset1;
	std::cout << cset1;
	std::cout << "-----------------------------------------" << "\n";
	
	// 2 - конструкторы init_list
	std::cout << "Конструкторы init_list: " << "\n";
	Set<char> cset2 = {'t','r','e','w','q'};
	Set<char> cset2_1{'g','f','d','s','a'};;
	std::cout << cset2;
	std::cout << cset2_1;
	std::cout << "-----------------------------------------" << "\n";

	// 3 - конструктор копирования
	std::cout << "Конструктор копирования: " << "\n";
	Set<char> cset3(cset2);
	std::cout << cset3;
	std::cout << "-----------------------------------------" << "\n";

	
	// проверка методов

	std::cout << "Проверка на пустоту:";
	std::cout << "cset1: " << cset1;
	std::cout << cset1.is_empty() << "\n";
	std::cout << "-----------------------------------------" << "\n";

	std::cout << "Проверка на вхождение элемента 'e':" << "\n";
	std::cout << "cset2: " << cset2;
	std::cout << cset2.found('e') << "\n";
	std::cout << "-----------------------------------------" << "\n";



	std::cout << "Проверка добавление нескольких элементов: " << "\n";
	std::cout << "cset1: " << cset1;
	cset1.insert({'m','n','l'});
	std::cout << cset1;
	std::cout << "-----------------------------------------" << "\n";


	std::cout << "Проверка добавление одного элемента 'z': " << "\n";
	std::cout << "cset3: " << cset3;
	cset3.insert('z');
	std::cout << cset3;
	std::cout << "-----------------------------------------" << "\n";

	std::cout << "Проверка повторного добавления одного элемента 'z': " << "\n";
	std::cout << "cset3: " << cset3;
	cset3.insert('z');
	std::cout << cset3;
	std::cout << "-----------------------------------------" << "\n";


	std::cout << "Проверка удаления элемента 'z': " << "\n";
	std::cout << "cset3: " << cset3;
	cset3.erase('z');
	std::cout << cset3;
	std::cout << "-----------------------------------------" << "\n";


	std::cout << "Проверка удаления несуществующего элемента 'z': " << "\n";
	std::cout << "cset3: " << cset3;
	cset3.erase('z');
	std::cout << cset3;
	std::cout << "-----------------------------------------" << "\n";

	return 0;

}
